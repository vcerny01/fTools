/* 
 * B2B-ZSKService
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.7.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.CzechPost.Client.SwaggerDateConverter;
namespace IO.Swagger.CzechPost.Model
{
    /// <summary>
    /// ParcelDataHistoryResult
    /// </summary>
    [DataContract]
        public partial class ParcelDataHistoryResult :  IEquatable<ParcelDataHistoryResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParcelDataHistoryResult" /> class.
        /// </summary>
        /// <param name="parcelDataHistory">parcelDataHistory.</param>
        /// <param name="parcelStatusHistory">parcelStatusHistory.</param>
        public ParcelDataHistoryResult(ParcelDataHistory parcelDataHistory = default(ParcelDataHistory), List<ParcelStatusHistory> parcelStatusHistory = default(List<ParcelStatusHistory>))
        {
            this.ParcelDataHistory = parcelDataHistory;
            this.ParcelStatusHistory = parcelStatusHistory;
        }
        
        /// <summary>
        /// Gets or Sets ParcelDataHistory
        /// </summary>
        [DataMember(Name="parcelDataHistory", EmitDefaultValue=false)]
        public ParcelDataHistory ParcelDataHistory { get; set; }

        /// <summary>
        /// Gets or Sets ParcelStatusHistory
        /// </summary>
        [DataMember(Name="parcelStatusHistory", EmitDefaultValue=false)]
        public List<ParcelStatusHistory> ParcelStatusHistory { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ParcelDataHistoryResult {\n");
            sb.Append("  ParcelDataHistory: ").Append(ParcelDataHistory).Append("\n");
            sb.Append("  ParcelStatusHistory: ").Append(ParcelStatusHistory).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ParcelDataHistoryResult);
        }

        /// <summary>
        /// Returns true if ParcelDataHistoryResult instances are equal
        /// </summary>
        /// <param name="input">Instance of ParcelDataHistoryResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ParcelDataHistoryResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ParcelDataHistory == input.ParcelDataHistory ||
                    (this.ParcelDataHistory != null &&
                    this.ParcelDataHistory.Equals(input.ParcelDataHistory))
                ) && 
                (
                    this.ParcelStatusHistory == input.ParcelStatusHistory ||
                    this.ParcelStatusHistory != null &&
                    input.ParcelStatusHistory != null &&
                    this.ParcelStatusHistory.SequenceEqual(input.ParcelStatusHistory)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ParcelDataHistory != null)
                    hashCode = hashCode * 59 + this.ParcelDataHistory.GetHashCode();
                if (this.ParcelStatusHistory != null)
                    hashCode = hashCode * 59 + this.ParcelStatusHistory.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
